version: '2.1'
services:
  test:
    build: 
      context: .
      dockerfile: Dockerfile.Test
    depends_on:
      - api
    environment:
      - TEST_USER=admin
      - TEST_USER_EMAIL=admin@example.com
      - TEST_USER_PASSWORD=admin
      - HOST=http://api
      - PORT=80
      - VERSION=v1
  api:
    build: .
    command: /srv/env/bin/gunicorn --bind 0.0.0.0:80 --reload --workers 1 --log-level=DEBUG --error-logfile=- --access-logfile=- appdj.wsgi
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces    
    env_file: api_tests/env
    ports:
      - "80:80"
    healthcheck:
      test: "sh search_healthcheck.sh"
    depends_on:
      - search
      - db
      - cache
      - broker
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.frontend.rule=PathPrefix:/"
  celery:
    build: .
    command: /srv/env/bin/celery -A appdj worker -l info
    volumes:
      - /workspaces:/workspaces
    env_file: api_tests/env
    depends_on:
      - db
      - cache
      - broker
    entrypoint: ''
  db:
    image: postgres:alpine
    ports:
      - "5432"
  broker:
    image: rabbitmq:alpine
    ports:
      - "5672"
  cache:
    image: redis:alpine
    ports:
      - "6379"
  search:
    image: elasticsearch:5-alpine    
    ports:
      - "9200"
  server:
    image: 3blades/traefik:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "82"
      - "8080"
    depends_on:
      - api
      - events
      - nginx
  events:
    image: 3blades/docker-events:latest
    restart: always
    env_file: api_tests/env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=events"
      - "traefik.status.frontend.rule=Path:/{version}/{namespace}/projects/{project}/servers/{server}/status/"
      - "traefik.logs.frontend.rule=Path:/{version}/{namespace}/projects/{project}/servers/{server}/logs/"
    ports:
      - "8000"
  nginx:
    image: 3blades/nginx
    command: /nginx/sbin/nginx -p '' -g 'daemon off;'
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nginx"
      - "traefik.nginx.frontend.rule=PathPrefix:/media"
    volumes:
      - /workspaces:/workspaces
