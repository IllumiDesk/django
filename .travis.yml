language: python
cache:
  - pip
  - apt
sudo: required
dist: trusty
# addons:
#   postgresql: "9.6"
python:
  - "3.6"
# whitelist
branches:
  only:
    - setup_restful_tests
services:
# enable docker service inside travis
  - docker
  # - postgresql
  # - redis-server
  # - node
# before_script:
#   - echo "listen_addresses = '*'" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
#   - echo "host all all 0.0.0.0/0 trust" | sudo tee -a /etc/postgresql/9.*/main/pg_hba.conf
#   - sudo /etc/init.d/postgresql stop
#   - sudo /etc/init.d/postgresql start 9.4
#   - psql template1 -c 'CREATE EXTENSION IF NOT EXISTS hstore;' -U postgres
#   - psql -c 'create database travis_ci_test;' -U postgres
#  - sleep 10
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker --version
  - docker-compose --version
  - docker-compose --help
  # - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  # - export PYTHONPATH=`pwd`:$PYTHONPATH
  # - export DJANGO_SETTINGS_MODULE="appdj.settings.test"
  # - export REDIS_URL="redis://localhost:6379/0"
  # - export DATABASE_URL="postgres://postgres:@localhost:5432/travis_ci_test"
  # - export NVIDIA_DOCKER_HOST=http://localhost:3476
  # - export AWS_DEFAULT_REGION="us-west-2"
  # - export COVERAGE_PROCESS_START=".coveragerc"
  # - export BASE_ADDRESS="https://127.0.0.1:8000"
# command to install dependencies
install:
  # - pip install -U pip setuptools wheel
  # - pip install -r requirements/dev.txt
  # - pip install codecov
  # - npm install

script:
  - docker-compose -f docker-compose.test.yml up --abort-on-container-exit
  # - python -W ignore tbs_coverage.py run manage.py test --parallel 16 && coverage combine && coverage report -m
  # - python manage.py runserver 8000
  # - bash config/buildDockerImage.sh

# after_success:
#   - bash <(curl -s https://codecov.io/bash)

# notifications:
#   slack: 3blades:RouLDGyG58awmaGkjgvh9Yuz
env:
  - DOCKER_COMPOSE_VERSION=1.4.2
#   - $DOCKER_IMAGE_NAME="3blades/app-backend"
