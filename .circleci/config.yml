# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine:
      environment:
        - DJANGO_SETTINGS_MODULE: appdj.settings.test
        - REDIS_URL: redis://localhost:6379/0
        - DATABASE_URL: postgres://postgres:@localhost:5432/circle_ci_test
        - NVIDIA_DOCKER_HOST: http://localhost:3476
        - AWS_DEFAULT_REGION: us-west-2
      services:
        - redis
      dependencies:
        pre:
          - sudo service redis-server stop
          - >
            cd ~ && if [ ! -d "redis-3.2.8" ]; then
              wget http://download.redis.io/releases/redis-3.2.8.tar.gz
              tar xzf redis-3.2.8.tar.gz
              cd redis-3.2.8 && make;
            fi
          - cd ~/redis-3.2.8 && sudo make install
          - sudo sed -i 's/bin/local\/bin/g' /etc/init/redis-server.conf
          - sudo service redis-server start
          - echo "listen_addresses = '*'" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
          - echo "host all all 0.0.0.0/0 trust" | sudo tee -a /etc/postgresql/9.*/main/pg_hba.conf
          - sudo /etc/init.d/postgresql stop
          - sudo /etc/init.d/postgresql start
          - psql template1 -c 'CREATE EXTENSION IF NOT EXISTS hstore;' -U postgres
          - psql -c 'create database circle_ci_test;' -U postgres
        cache_directories:
          - ~/redis-3.2.8
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements/dev.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements/dev.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test --parallel 16

      - store_artifacts:
          path: test-reports
          destination: test-reports
