# Generated by Django 2.2.1 on 2019-06-18 14:08

from pathlib import Path
from django.conf import settings
from django.db import migrations


def create_assignments(apps, schema_editor):
    Server = apps.get_model('servers', 'Server')
    Assignment = apps.get_model('assignments', 'Assignment')
    Project = apps.get_model('projects', 'Project')
    CanvasInstance = apps.get_model('canvas', 'CanvasInstance')
    for server in Server.objects.all():
        resource_root = Path(settings.RESOURCE_DIR, str(server.project.pk))
        for assignment in server.config.get('assignments', []):
            Assignment.objects.create(
                external_id=assignment['aid'] if 'aid' in assignment else assignment['id'],
                path=str(resource_root / assignment['path']),
                outcome_url=assignment['outcome_url'],
                source_did=assignment.get('source_did', ''),
                student_project=server.project,
                teacher_project=Project.objects.get(pk=server.project.config['copied_from']),
                lms_instance=CanvasInstance.objects.get(instance_guid=assignment['instance_guid'])
            )


def revert(apps, schema_editor):
    Assignment = apps.get_model('assignments', 'Assignment')
    for assignment in Assignment.objects.all():
        server = assignment.student_project.servers.first()
        assignments = server.config.get('assignments', [])
        assignments.append({
            'aid': assignment.external_id,
            'path': Path(assignment.path).relative_to(assignment.student_project.resource_root()),
            'outcome_url': assignment.outcome_url,
            'source_did': assignment.source_did,
            'instance_guid': assignment.instance_guid,
        })
        server.config['assignments'] = assignments
        server.save()


class Migration(migrations.Migration):

    dependencies = [
        ('assignments', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_assignments, revert)
    ]
