version: '2'
services:
  api:
    build: .
    command: /srv/env/bin/gunicorn --bind 0.0.0.0:80 --reload --workers 1 --log-level=DEBUG --error-logfile=- --access-logfile=- appdj.wsgi
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces
    env_file: env
    depends_on:
      - db
      - cache
      - broker
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.frontend.priority=1"
      - "traefik.frontend.rule=PathPrefix:/"
  channels:
    build: .
    command: /srv/env/bin/daphne -p 80 -b 0.0.0.0 -v 2 appdj.asgi:channel_layer
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces
    env_file: env
    depends_on:
      - db
      - cache
      - broker
    ports:
      - "9000:80"
    entrypoint: ''
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sockets"
      - "traefik.frontend.priority=2"
      - "traefik.frontend.rule=Path:/sns/{server}/,/{version}/{namespace}/projects/{project}/servers/{server}/status/"
  channel_worker:
    build: .
    command: /srv/env/bin/python manage.py runworker -v 2
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces
    env_file: env
    depends_on:
      - db
      - cache
      - broker
    entrypoint: ''
  celery:
    build: .
    command: /srv/env/bin/celery -A appdj worker -l info --without-heartbeat
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces
    env_file: env
    depends_on:
      - db
      - cache
      - broker
    entrypoint: ''
  beat:
    build: .
    command: /srv/env/bin/celery -A appdj beat -l debug
    volumes:
      - .:/srv/app
      - /workspaces:/workspaces
    env_file: env
    depends_on:
      - db
      - cache
      - broker
    entrypoint: ''
  db:
    image: postgres:9.6-alpine
    ports:
      - "5432:5432"
  broker:
    image: rabbitmq:alpine
    ports:
      - "5672:5672"
  cache:
    image: redis:alpine
    ports:
      - "6379:6379"
  server:
    image: 3blades/traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5000:80"
      - "8081:8080"
  nginx:
    image: 3blades/nginx
    command: /nginx/sbin/nginx -p '' -g 'daemon off;'
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nginx"
      - "traefik.nginx.frontend.rule=PathPrefix:/media"
    volumes:
      - /workspaces:/workspaces

networks:
  default:
    external:
      name: tbs-net
