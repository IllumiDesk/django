# -*- coding: utf-8 -*-
# Generated by Django 1.11.7.dev20171110160536 on 2017-11-10 17:16
from __future__ import unicode_literals

from django.db import migrations
from django.core.serializers import base, python
from django.core.management import call_command


def load_fixture(apps, schema_editor):
    # Save the old _get_model() function
    old_get_model = python._get_model

    # Define new _get_model() function, utilizing the historical version of a model.
    # This is an unchanged copy from django.core.serializers.python._get_model
    def _get_model(model_identifier):
        try:
            return apps.get_model(model_identifier)
        except (LookupError, TypeError):
            raise base.DeserializationError("Invalid model identifier: '%s'" % model_identifier)

    # Replace the _get_model() function on the module, so loaddata can utilize it.
    python._get_model = _get_model

    try:
        # Call loaddata command
        call_command('loaddata', 'server_sizes.json', app_label='servers')
    finally:
        # Restore old _get_model() function
        python._get_model = old_get_model

class Migration(migrations.Migration):

    dependencies = [
        ('servers', '0007_server_last_start'),
    ]

    operations = [
        migrations.RunPython(load_fixture),
    ]
