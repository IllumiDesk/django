# -*- coding: utf-8 -*-
# Generated by Django 1.11.4.dev20170714110119 on 2017-07-14 15:07
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state_province', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=11)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('address_city', models.CharField(max_length=255, null=True)),
                ('address_country', models.CharField(max_length=255, null=True)),
                ('address_line1', models.CharField(max_length=255, null=True)),
                ('address_line1_check', models.CharField(choices=[('pass', 'Passed'), ('fail', 'Failed'), ('unavailable', 'Unavailable'), ('unchecked', 'Unchecked')], max_length=12, null=True)),
                ('address_line2', models.CharField(max_length=255, null=True)),
                ('address_state', models.CharField(max_length=100, null=True)),
                ('address_zip', models.CharField(max_length=25, null=True)),
                ('address_zip_check', models.CharField(choices=[('pass', 'Passed'), ('fail', 'Failed'), ('unavailable', 'Unavailable'), ('unchecked', 'Unchecked')], max_length=12, null=True)),
                ('brand', models.CharField(choices=[('Visa', 'Visa'), ('American Express', 'American Express'), ('MasterCard', 'MasterCard'), ('Discover', 'Discover'), ('JCB', 'JCB'), ('Diners Club', 'Diners Club'), ('Unknown', 'Unknown')], max_length=16)),
                ('cvc_check', models.CharField(choices=[('pass', 'Passed'), ('fail', 'Failed'), ('unavailable', 'Unavailable'), ('unchecked', 'Unchecked')], max_length=12, null=True)),
                ('dynamic_last4', models.CharField(max_length=4, null=True)),
                ('last4', models.CharField(max_length=4)),
                ('exp_month', models.IntegerField()),
                ('exp_year', models.IntegerField()),
                ('fingerprint', models.TextField()),
                ('funding', models.CharField(choices=[('Credit', 'Credit'), ('Debit', 'Debit'), ('Prepaid', 'Prepaid'), ('Unknown', 'Unknown')], max_length=7)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('amount', models.PositiveIntegerField()),
                ('amount_refunded', models.PositiveIntegerField()),
                ('captured', models.BooleanField(default=False)),
                ('currency', models.CharField(max_length=10)),
                ('description', models.TextField(null=True)),
                ('paid', models.BooleanField(default=True)),
                ('reciept_email', models.EmailField(max_length=254, null=True)),
                ('reciept_number', models.CharField(max_length=255)),
                ('refunded', models.BooleanField(default=False)),
                ('statement_descriptor', models.TextField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('amount_off', models.PositiveIntegerField(null=True)),
                ('currency', models.CharField(max_length=255)),
                ('duration', models.CharField(choices=[('forever', 'Forever'), ('once', 'Once'), ('repeating', 'Repeat')], max_length=7)),
                ('duration_in_months', models.PositiveIntegerField()),
                ('max_redemptions', models.PositiveIntegerField()),
                ('percent_off', models.PositiveIntegerField(null=True)),
                ('redeem_by', models.DateTimeField(null=True)),
                ('timed_redeemed', models.PositiveIntegerField()),
                ('valid', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('account_balance', models.IntegerField(default=0)),
                ('currency', models.CharField(max_length=10, null=True)),
                ('last_invoice_sync', models.DateTimeField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('default_source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='billing.Card')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('api_version', models.CharField(max_length=50)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('pending_webhooks', models.PositiveIntegerField(default=0)),
                ('request', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('amount_due', models.IntegerField()),
                ('application_fee', models.IntegerField(null=True)),
                ('attempt_count', models.PositiveIntegerField(null=True)),
                ('attempted', models.BooleanField(default=False)),
                ('closed', models.BooleanField(default=False)),
                ('currency', models.CharField(max_length=10)),
                ('invoice_date', models.DateTimeField()),
                ('description', models.TextField(null=True)),
                ('next_payment_attempt', models.DateTimeField(null=True)),
                ('paid', models.BooleanField(default=False)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('reciept_number', models.CharField(max_length=255)),
                ('starting_balance', models.IntegerField()),
                ('statement_descriptor', models.TextField(null=True)),
                ('subtotal', models.IntegerField()),
                ('tax', models.IntegerField(null=True)),
                ('total', models.IntegerField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('amount', models.IntegerField()),
                ('currency', models.CharField(max_length=10)),
                ('invoice_date', models.DateTimeField()),
                ('proration', models.BooleanField(default=False)),
                ('quantity', models.IntegerField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Customer')),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('amount', models.PositiveIntegerField()),
                ('currency', models.CharField(default='usd', max_length=3)),
                ('interval', models.CharField(choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], max_length=5)),
                ('interval_count', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('statement_descriptor', models.TextField(null=True)),
                ('trial_period_days', models.PositiveIntegerField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('stripe_id', models.TextField(unique=True)),
                ('created', models.DateTimeField()),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('livemode', models.BooleanField(default=True)),
                ('application_fee_percent', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(null=True)),
                ('current_period_start', models.DateTimeField(null=True)),
                ('current_period_end', models.DateTimeField(null=True)),
                ('start', models.DateTimeField(null=True)),
                ('ended_at', models.DateTimeField(null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('trialing', 'Trial'), ('active', 'Active'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('unpaid', 'Unpaid')], max_length=8)),
                ('trial_start', models.DateTimeField(null=True)),
                ('trial_end', models.DateTimeField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Customer')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Plan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Subscription'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Subscription'),
        ),
        migrations.AddField(
            model_name='discount',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Subscription'),
        ),
    ]
